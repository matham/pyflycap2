version: 1.0.{build}
environment:
  FLY_BUILD_DIR: C:\fly_build
  FLY_LIB_VER: v110
  DEPLOY_DIR: deploy
  DEPLOY_ENV_DIR: deploy_env
  access_token:
    secure: H8F1UMqC4QixM9NbnHewuineXTu860e3WhkpgMzui6xQmCv2qyXd4BDonVrrW5Iv
  wheel_token:
    secure: QHWNQIhdUM3nR/Tj9wkVIQ==
  matrix:
  - PYVER: 27
    BITTNESS: 32
  - PYVER: 34
    BITTNESS: 32
  - PYVER: 27
    BITTNESS: 64
  - PYVER: 34
    BITTNESS: 64
build_script:
- ps: >-
    iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/matham/packaging/master/check_error.ps1'))

    $old_path = "$env:PYTHONPATH"

    $env:PYTHONPATH = "$env:APPVEYOR_BUILD_FOLDER;$env:PYTHONPATH"

    $env:PYFLYCAP2_INCLUDE = "$env:FLY_BUILD_DIR\flycap\include"

    if ($env:BITTNESS -eq "64") {
      $PYTHON_ROOT = "C:\Python$env:PYVER-x64"
      $env:PYFLYCAP2_LIB = "$env:FLY_BUILD_DIR\flycap\x64"
    } else {
      $PYTHON_ROOT = "C:\Python$env:PYVER"
      $env:PYFLYCAP2_LIB = "$env:FLY_BUILD_DIR\flycap\x86"
    }

    $env:PATH = "$PYTHON_ROOT;$PYTHON_ROOT\Scripts;$env:PATH;C:\Program Files\7-Zip"


    python -c "import sys;print('Python version is {}'.format(sys.version))"

    Check-Error


    mkdir "$env:FLY_BUILD_DIR"

    Check-Error

    python -c "with open(r'$PYTHON_ROOT\Lib\distutils\distutils.cfg', 'wb') as fh: fh.write(b'[build]\ncompiler = mingw32\n')"

    Check-Error

    python -m pip install pip wheel setuptools --upgrade

    Check-Error

    pip install -i https://pypi.anaconda.org/carlkl/simple mingwpy

    Check-Error

    pip install cython nose

    Check-Error



    cd "$env:FLY_BUILD_DIR"

    Invoke-WebRequest "https://www.dropbox.com/s/3wk9w3xem1mp1mv/flycap.7z?dl=1" -OutFile "flycap.7z"

    Check-Error

    7z x "flycap.7z" -p"$env:wheel_token"

    Check-Error



    cd "$env:APPVEYOR_BUILD_FOLDER"

    mkdir $env:DEPLOY_DIR

    mkdir $env:DEPLOY_ENV_DIR

    python setup.py bdist_wheel -d "$env:DEPLOY_DIR"

    Check-Error

    if ($env:BITTNESS -eq "64" -and $env:PYVER -eq "34") {
      python setup.py sdist -d "$env:DEPLOY_DIR"
      Check-Error
    }
    $env:PYFLYCAP2_WHEEL_DEPS="$env:PYFLYCAP2_LIB"

    python setup.py bdist_wheel -d "$env:DEPLOY_ENV_DIR"

    Check-Error

    $name = python -c "from os import listdir;print([l for l in listdir(r'$env:DEPLOY_ENV_DIR') if l.endswith('.whl')][0])"

    Check-Error

    7z a -p"$env:wheel_token" "$env:APPVEYOR_BUILD_FOLDER\$env:DEPLOY_DIR\$name.7z" ".\$env:DEPLOY_ENV_DIR\$name"

    Check-Error

    $env:PYTHONPATH = "$old_path"

test_script:
- ps: >-
    iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/matham/packaging/master/check_error.ps1'))

    cd "$env:APPVEYOR_BUILD_FOLDER\$env:DEPLOY_ENV_DIR"

    $name = python -c "import glob;print(glob.glob('*.whl')[0])"

    Check-Error

    echo $name

    python -m wheel install "$name"

    Check-Error

    python -c "from pyflycap2.interface import CameraContext; CameraContext()"

    Check-Error


artifacts:
- path: $(DEPLOY_DIR)\*
  name: wheels
on_success:
- ps: >-
    if ($env:BITTNESS -eq "64" -and $env:PYVER -eq "34") {
        iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/matham/packaging/master/cpl_appveyor_gh_docs.ps1'))
    }
